import streamlit as st
from datetime import datetime, date
import pandas as pd

# Importar m√≥dulos locales
from utils import get_social_network
from ai_classifier import classify_text, load_classifier
from google_sheets_handler import append_to_sheet, EXPECTED_COLUMNS

# Configuraci√≥n de la p√°gina de Streamlit
st.set_page_config(page_title="Detector de Antisemitismo", layout="wide")

st.title("Herramienta de Detecci√≥n y Clasificaci√≥n de Antisemitismo ‚ú°Ô∏è")
st.markdown("""
Esta aplicaci√≥n te permite registrar y analizar publicaciones de redes sociales 
para identificar posibles manifestaciones de antisemitismo seg√∫n la definici√≥n de la IHRA.
Ingresa los detalles del post manualmente.
""")

# --- Cargar Modelo de IA ---
# Se carga una vez y se cachea para mejorar el rendimiento.
classifier = load_classifier()
if classifier is None:
    st.error("El clasificador de IA no pudo cargarse. La funcionalidad de clasificaci√≥n estar√° deshabilitada.")

# --- Formulario de Entrada de Datos ---
st.header("Registrar Nueva Publicaci√≥n")

with st.form("new_post_form", clear_on_submit=True):
    col1, col2 = st.columns(2)

    with col1:
        url_post = st.text_input("üîó Enlace del Post (URL)", placeholder="https://...")
        texto_post = st.text_area("üìù Texto del Post", height=200, placeholder="Copia y pega el texto completo del post aqu√≠...")
    
    with col2:
        usuario_post = st.text_input("üë§ Usuario", placeholder="@usuario o nombre de p√°gina")
        hashtags_post = st.text_input("Ô∏è#Ô∏è‚É£ Hashtags (separados por coma)", placeholder="#tag1, #antisemitismo, #ejemplo")
        
        # Fecha de publicaci√≥n original
        default_date = date.today()
        fecha_publicacion_original = st.date_input("üóìÔ∏è Fecha de Publicaci√≥n Original del Post", value=default_date, max_value=default_date)

    submitted = st.form_submit_button("‚úÖ Analizar y Guardar en Google Sheets")

# --- L√≥gica de Procesamiento ---
if submitted:
    if not url_post or not texto_post:
        st.error("‚ö†Ô∏è Por favor, completa al menos el Enlace del Post y el Texto del Post.")
    elif classifier is None:
         st.error("‚ö†Ô∏è El clasificador de IA no est√° disponible. No se puede procesar el post.")
    else:
        with st.spinner("Procesando y guardando... Por favor espera."):
            # 1. Determinar Red Social
            red_social = get_social_network(url_post)

            # 2. Clasificaci√≥n con IA
            clasificacion_ia = classify_text(texto_post, classifier)

            # 3. Fecha de registro en la app (ahora)
            fecha_registro_app = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            
            # 4. Preparar datos para Google Sheets
            # Convertir fecha_publicacion_original (datetime.date) a string
            fecha_pub_str = fecha_publicacion_original.strftime("%Y-%m-%d")

            data_to_save = {
                "Fecha de Registro en App": fecha_registro_app,
                "Fecha de Publicaci√≥n Original": fecha_pub_str,
                "Red Social": red_social,
                "Usuario": usuario_post,
                "Texto Extra√≠do": texto_post,
                "Hashtags": hashtags_post,
                "Enlace": url_post,
                "Clasificaci√≥n IA": clasificacion_ia
            }
            
            # 5. Guardar en Google Sheets
            success = append_to_sheet(data_to_save)

            if success:
                st.success("üéâ ¬°Publicaci√≥n analizada y guardada correctamente en Google Sheets!")
                st.balloons()
                
                # Mostrar un resumen de lo guardado
                st.subheader("Resumen de los Datos Guardados:")
                # Crear un DataFrame para mostrarlo bien formateado
                df_summary = pd.DataFrame([data_to_save])
                # Reordenar columnas para el display si es necesario, o usar EXPECTED_COLUMNS
                display_columns = [col for col in EXPECTED_COLUMNS if col in df_summary.columns]
                st.dataframe(df_summary[display_columns], use_container_width=True)
            else:
                st.error("‚ùå Hubo un error al guardar los datos en Google Sheets. Revisa los mensajes de error anteriores.")

st.markdown("---")
st.markdown("Desarrollado con cari√±o y preocupaci√≥n.")
st.markdown("<p style='text-align: center;'>Si encuentras alg√∫n problema o tienes sugerencias, por favor cont√°ctame.</p>", unsafe_allow_html=True)
